{
  "phases": {
    "context-engineering": {
      "requiredDocuments": [
        "context-engineering/01-requirements/prd-complete.md",
        "context-engineering/01-requirements/user-stories-exhaustive.md", 
        "context-engineering/01-requirements/acceptance-criteria-detailed.md",
        "context-engineering/02-technology/technology-stack-decisions.md",
        "context-engineering/03-architecture/api-contracts-complete.md",
        "context-engineering/03-architecture/database-schema-detailed.md",
        "context-engineering/04-standards/coding-conventions.md",
        "context-engineering/05-specifications/technical-requirements.md",
        "context-engineering/06-implementation/implementation-guide.md"
      ],
      "completionCriteria": [
        "Zero ambiguous requirements", 
        "All technology decisions justified",
        "Complete API contracts with exact formats",
        "Database schema fully specified",
        "All edge cases documented",
        "Implementation readiness score: 100%"
      ],
      "validator": "context-validator"
    },
    "implementation-execution": {
      "phases": {
        "infrastructure": {
          "tasks": ["Database schema created", "CI/CD configured", "Base API structure"],
          "validator": "qa-validator"
        },
        "backend": {
          "tasks": ["All API endpoints implemented", "Business logic complete", "External integrations working"],
          "validator": "performance-validator" 
        },
        "frontend": {
          "tasks": ["Components built", "User stories implemented", "UI complete"],
          "validator": "qa-validator"
        },
        "quality": {
          "tasks": ["Tests passing", "Performance benchmarks met", "Security validated"],
          "validator": "security-validator"
        }
      }
    }
  }
}
